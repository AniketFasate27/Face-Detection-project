import cv2
from tkinter import *
from tkinter import messagebox

def start_face_detection():
    # Load the cascade classifier
    try:
        face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")
    except Exception as e:
        print(f"Error loading cascade classifier file: {e}")
        return

    # Start the video capture
    cap = cv2.VideoCapture(0)

    while True:
        # Capture frame-by-frame
        ret, frame = cap.read()

        # Convert the frame to grayscale (face detection requires grayscale input)
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Detect faces in the grayscale frame
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)

        # Draw a rectangle around the faces
        for (x, y, w, h) in faces:
            cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 0, 255), 2)

        # Display the resulting frame
        cv2.imshow('frame', frame)

        # Check for the 'q' key to exit the program
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Release the capture and close the window
    cap.release()
    cv2.destroyAllWindows()

def authenticate_user():
    # Get the entered username and password
    username = username_entry.get()
    password = password_entry.get()

    # Check if the username and password are correct
    if username == "cit" and password == "cap":
        # Show the message that the user is being authenticated
        messagebox.showinfo("Authentication", "Authenticating user...")

        # Start the face detection process
        start_face_detection()
    else:
        # Show the message that the username or password is incorrect
        messagebox.showerror("Authentication", "Incorrect username or password.")

# Create the login window
root = Tk()
root.title("Face Detection Login")
root.geometry("600x400")
root.attributes('-fullscreen', True)

# Set the background color
root.configure(bg="navy blue")

# Create the background image
#bg_image = PhotoImage(file="background.png")
# bg_label = Label(root, image=bg_image)
# bg_label.place(x=0, y=0)

# Create the username and password entry fields
username_label = Label(root, text="Username:", font=("Arial", 24), fg="white", bg="navy blue")
username_entry = Entry(root, font=("Arial", 24))
password_label = Label(root, text="Password:", font=("Arial", 24), fg="white", bg="navy blue")
password_entry = Entry(root, show="*", font=("Arial", 24))

# Create the login button
login_button = Button(root, text="Login", font=("Arial", 24), command=authenticate_user)

# Place the widgets in the center of the screen
username_label.place(relx=0.5, rely=0.35, anchor=CENTER)
username_entry.place(relx=0.5, rely=0.45, anchor=CENTER)
password_label.place(relx=0.5, rely=0.55, anchor=CENTER)
password_entry.place(relx=0.5, rely=0.65, anchor=CENTER)
login_button.place(relx=0.5, rely=0.8, anchor=CENTER)

# Start the main event loop
root.mainloop()
